add git
Browse to the project path where the .xcodeproj file is.
Execute the following from your command line:
    git init
    git add .
    git commit -m 'Initial commit from local git'
    git remote add origin git@github.com:ACCOUNT/PROJECT.git
    git pull origin master
    (VIM editor opens)
    Hit 'i' to add a comment, for example 'Initial merge to sync local git with remote git'.
    Hit 'ESC'.
    Hit 'ZZ'.
    (VIM editor closes)
    git push origin master

=======================================================================================

/* // this function has some problems. When I use 16 or larger array, start from element 11, there will be 2 or 3 run function at the same time
func delay(delay: Double, closure: ()->()) {
dispatch_after(
dispatch_time(
DISPATCH_TIME_NOW,
Int64(delay * Double(NSEC_PER_SEC))
),
dispatch_get_main_queue(),
closure
)
}

=======================================================================================

func applicationWillResignActive(application: UIApplication) {
// Sent when the application is about to move from active to inactive state. This can occur for certain types of temporary interruptions (such as an incoming phone call or SMS message) or when the user quits the application and it begins the transition to the background state.
// Use this method to pause ongoing tasks, disable timers, and throttle down OpenGL ES frame rates. Games should use this method to pause the game.
}

func applicationDidEnterBackground(application: UIApplication) {
// Use this method to release shared resources, save user data, invalidate timers, and store enough application state information to restore your application to its current state in case it is terminated later.
// If your application supports background execution, this method is called instead of applicationWillTerminate: when the user quits.
}

func applicationWillEnterForeground(application: UIApplication) {
// Called as part of the transition from the background to the inactive state; here you can undo many of the changes made on entering the background.
}

func applicationDidBecomeActive(application: UIApplication) {
// Restart any tasks that were paused (or not yet started) while the application was inactive. If the application was previously in the background, optionally refresh the user interface.
}

func applicationWillTerminate(application: UIApplication) {
// Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.
}


=======================================================================================

// persistent data

// MARK: Archiving Paths
static let DocumentsDirectory = NSFileManager().URLsForDirectory(.DocumentDirectory, inDomains: .UserDomainMask).first!
static let ArchiveURL = DocumentsDirectory.URLByAppendingPathComponent("questions")

// MARK: NSCoding
func saveQuestion() {
let isSuccessfulSave = NSKeyedArchiver.archiveRootObject(questions, toFile: Questions.ArchiveURL.path!)
//let isSuccessfulSave = NSKeyedArchiver.archiveRootObject(questions, toFile: "questionLibrary/questionsLibrary")
if !isSuccessfulSave {
print("Failed to save question...")
}
}

// get the data from file
func loadQuestion() -> Array<String>? {
return NSKeyedUnarchiver.unarchiveObjectWithFile(Questions.ArchiveURL.path!) as? Array<String>
//return NSKeyedUnarchiver.unarchiveObjectWithFile("questionLibrary/questionsLibrary") as? [String]
}

=======================================================================================

//感知设备方向 - 开启监听设备方向
UIDevice.currentDevice().beginGeneratingDeviceOrientationNotifications()
//添加通知，监听设备方向改变
NSNotificationCenter.defaultCenter().addObserver(self, selector: "receivedRotation",
name: UIDeviceOrientationDidChangeNotification, object: nil)

//关闭设备监听
//UIDevice.currentDevice().endGeneratingDeviceOrientationNotifications()
}

//通知监听触发的方法
func receivedRotation(){
var device = UIDevice.currentDevice()
switch device.orientation{
case .Portrait:
orientationLabel.text = "面向设备保持垂直，Home键位于下部"
case .PortraitUpsideDown:
orientationLabel.text = "面向设备保持垂直，Home键位于上部"
case .LandscapeLeft:
orientationLabel.text = "面向设备保持水平，Home键位于左侧"
case .LandscapeRight:
orientationLabel.text = "面向设备保持水平，Home键位于右侧"
case .FaceUp:
orientationLabel.text = "设备平放，Home键朝上"
case .FaceDown:
orientationLabel.text = "设备平放，Home键朝下"
case .Unknown:
orientationLabel.text = "方向未知"
default:
orientationLabel.text = "方向未知"
}
}

=======================================================================================

// read data from file
let path = NSBundle.mainBundle().pathForResource("questions", ofType: "txt")
var contents: String
do {
contents = try String(contentsOfFile: path!, encoding: NSUTF8StringEncoding)
questions = contents.characters.split { $0 == "\n" || $0 == "\r\n" }.map(String.init)
}catch{
contents = "error"
}
